
/** 
 *  MAX_OF_ARRAY HUFF EXERCISE
 *  
 *  In this task, Given an abi encoded array of uint256, return its maximum value. Revert if the array is empty.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function maxOfArray(uint256[]) payable returns(uint256)


#define macro MAX_ARRAY() = takes(0) returns(0) {
    0x04 calldataload 0x04 add dup1  // [offset, offset]
    calldataload                     // [nArgs, offset]
    dup1 iszero revertJump jumpi
    returndatasize                  // [max, nArgs, offset]
    dup3                           // [offset, max, nArgs, offset]

    start:
        dup3 iszero endJump jumpi
        0x20 add      // [offset, max, nArgs]
        swap1         // [max, offset, nArgs]
        dup2 calldataload   // [new_value, max, offset, nArgs]
        dup2 dup2 lt skip jumpi
        swap1 
    skip:
        pop
        swap2            // [nArgs, offset, max]
        0x01 swap1 sub   // [nArgs-1, offset, max]
        swap2            // [max, offset, nArgs-1]
        swap1           // [offset, max, nArgs-1]
        start jump


    endJump:
        pop
        returndatasize mstore
        0x20 returndatasize return

    revertJump:
        0x00 0x00 revert

}

#define macro MAIN() = takes(0) returns(0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(maxOfArray) eq max jumpi

    0x00 0x00 revert

    max:
        MAX_ARRAY()
}